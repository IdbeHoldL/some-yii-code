<?php
// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build

namespace common\models\base;

use Yii;

/**
 * This is the base-model class for table "comment_tree".
 *
 * @property integer $ancestor_id
 * @property integer $descendant_id
 * @property integer $nearest_ancestor_id
 * @property integer $level
 * @property string $created_at
 * @property string $model_type
 * @property integer $model_id
 *
 * @property \common\models\Comment $ancestor
 * @property \common\models\Comment $descendant
 * @property string $aliasModel
 */
abstract class CommentTree extends \yii\db\ActiveRecord
{



    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'comment_tree';
    }


    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['ancestor_id', 'descendant_id', 'model_type', 'model_id'], 'required'],
            [['ancestor_id', 'descendant_id', 'nearest_ancestor_id', 'level', 'model_id'], 'integer'],
            [['created_at'], 'safe'],
            [['model_type'], 'string'],
            [['descendant_id'], 'unique'],
            [['ancestor_id'], 'exist', 'skipOnError' => true, 'targetClass' => \common\models\Comment::className(), 'targetAttribute' => ['ancestor_id' => 'id']],
            [['descendant_id'], 'exist', 'skipOnError' => true, 'targetClass' => \common\models\Comment::className(), 'targetAttribute' => ['descendant_id' => 'id']]
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'ancestor_id' => Yii::t('app', 'Ancestor ID'),
            'descendant_id' => Yii::t('app', 'Descendant ID'),
            'nearest_ancestor_id' => Yii::t('app', 'Nearest Ancestor ID'),
            'level' => Yii::t('app', 'Level'),
            'created_at' => Yii::t('app', 'Created At'),
            'model_type' => Yii::t('app', 'Model Type'),
            'model_id' => Yii::t('app', 'Model ID'),
        ];
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getAncestor()
    {
        return $this->hasOne(\common\models\Comment::className(), ['id' => 'ancestor_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getDescendant()
    {
        return $this->hasOne(\common\models\Comment::className(), ['id' => 'descendant_id']);
    }


    
    /**
     * @inheritdoc
     * @return \common\models\query\CommentTreeQuery the active query used by this AR class.
     */
    public static function find()
    {
        return new \common\models\query\CommentTreeQuery(get_called_class());
    }


}
